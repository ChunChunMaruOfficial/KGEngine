export const LambertMaterial = (
  visual = {
    color: 0xffffff,
    emissive: 0x000000,
    map: null,
    lightMap: null,
    lightMapIntensity: 1,
    aoMap: null,
    aoMapIntensity: 1,
    emissiveIntensity: 1,
    emissiveMap: null,
    bumpMap: null,
    bumpScale: 1,
    normalMap: null,
    normalScale: new THREE.Vector2(1, 1),
    displacementMap: null,
    displacementScale: 1,
    displacementBias: 0,
    alphaMap: null,
    envMap: null,
    combine: THREE.MultiplyOperation,
    reflectivity: 1,
    refractionRatio: 0.98,
  },
  admin = {
    wireframe: false,
    wireframeLinewidth: 1,
    side: THREE.FrontSide,
    flatShading: false,
    fog: true,
  },
  animate = {
    skinning: false,
    morphTargets: false,
    morphNormals: false,
  }
) => {
  return new THREE.MeshLambertMaterial({
    color: visual.color,
    emissive: visual.emissive,
    map: visual.map,
    lightMap: visual.lightMap,
    lightMapIntensity: visual.lightMapIntensity,
    aoMap: visual.aoMap,
    aoMapIntensity: visual.aoMapIntensity,
    emissiveIntensity: visual.emissiveIntensity,
    emissiveMap: visual.emissiveMap,
    bumpMap: visual.bumpMap,
    bumpScale: visual.bumpScale,
    normalMap: visual.normalMap,
    normalScale: visual.normalScale,
    displacementMap: visual.displacementMap,
    displacementScale: visual.displacementScale,
    displacementBias: visual.displacementBias,
    alphaMap: visual.alphaMap,
    envMap: visual.envMap,
    combine: visual.combine,
    reflectivity: visual.reflectivity,
    refractionRatio: visual.refractionRatio,

    wireframe: admin.wireframe,
    wireframeLinewidth: admin.wireframeLinewidth,
    side: admin.side,
    flatShading: admin.flatShading,
    fog: admin.fog,

    skinning: animate.skinning,
    morphTargets: animate.morphTargets,
    morphNormals: animate.morphNormals,
  });
};
